#This yml file build the java-maven project, docker image, and push into the docker registry.
name: Maven Build and Docker Push

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]
  workflow_dispatch:   # allows manual trigger

jobs:
  build-and-push:
    runs-on: ubuntu-latest

    steps:
      # 1Ô∏è‚É£ Checkout code
      - name: Checkout repository
        uses: actions/checkout@v4

      # 2Ô∏è‚É£ Set up JDK for Maven
      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '17'

      # 3Ô∏è‚É£ Cache Maven dependencies (optional but faster)
      - name: Cache Maven packages
        uses: actions/cache@v4
        with:
          path: ~/.m2
          key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-m2

      # 4Ô∏è‚É£ Build with Maven
      - name: Build with Maven
        run: mvn -B clean package --file pom.xml

      # 5Ô∏è‚É£ Log in to Docker registry
      # Set your secrets in: Settings ‚Üí Secrets and variables ‚Üí Actions
      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      # 6Ô∏è‚É£ Build and push Docker image
      - name: Build and push Docker image
        uses: docker/build-push-action@v6
        with:
          context: .
          push: true
          tags: |
            ${{ secrets.DOCKER_USERNAME }}/githubaction:latest
            ${{ secrets.DOCKER_USERNAME }}/githubaction:${{ github.run_number }}
        # 7Ô∏è‚É£ Debugging: Print push info
      - name: Debug - Print Docker push details
        run: |
          echo "‚úÖ Docker image push completed!"
          echo "Pushed image tags:"
          echo " - ${{ secrets.DOCKER_USERNAME }}/docker_images:0.2"
          echo " - ${{ secrets.DOCKER_USERNAME }}/docker_images:${{ github.run_number }}"
          echo ""
          echo "üîç Checking local Docker images:"
          docker images | grep githubaction || echo "No local images found"
          echo ""
          echo "üîç Pulling image from Docker Hub to verify it exists:"
          docker pull ${{ secrets.DOCKER_USERNAME }}/githubaction:latest
          echo "‚úÖ Verification completed successfully!"

      
# (Optional) Verify image
#       - name: Verify image
#         run: docker pull ${{ secrets.DOCKER_USERNAME }}/myapp:latest
